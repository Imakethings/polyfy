#! /bin/bash

#adds totally awesome polygons to any wallpaper
#check if file is specified

usage () {
                echo "Incorrect use";
                echo "polyfy /path/to/file <options>";
                echo "Available options";
                echo "-b <number> - width of border (default: 10)";
                echo "-s <number> - size of polygon as a fraction of image height (default: 3)";
				echo "--blur <number> - amount to blur image, excluding area inside polygon (default: 0)";
                echo "triangle|diamond|square - what shape to draw (default: diamond)";
                echo "over|under|none - if the second polygon is drawn over or under the first (default: over)";
                exit 0;
}

points () {
        point1=$((imagewidth/2));
        pointa=$((imageheight/2-height/2));
        point2=$((imagewidth/2-length/2));
        pointb=$((imageheight/2+height/2));
        point3=$((imagewidth/2+length/2));
        pointc=$((imageheight/2));
}

triangle () {
        length=$(echo "$imageheight/${size//[^0-9-.]/}" | bc -l | awk '{print int($1+0.5)}');
        height=$(echo "$length * sqrt(3) / 2" | bc -l | awk '{print int($1+0.5)}');
        points;
        path1="M $point1,$pointa $point2,$pointb $point3,$pointb Z";
        path2="M $point1,$pointb $point2,$pointa $point3,$pointa Z";
}

square () {
        length=$(echo "$imageheight/${size//[^0-9-.]/}" | bc -l | awk '{print int($1+0.5)}');
        height=$length;
        points;
        pluslength=$(echo "sqrt(($length^2)*2)/2" | bc -l | awk '{print int($1+0.5)}');
        point4=$((point1+pluslength));
        point5=$((point1-pluslength));
        pointd=$((pointc+pluslength));
        pointe=$((pointc-pluslength));
        path1="M $point2,$pointb $point2,$pointa $point3,$pointa $point3,$pointb Z";
        path2="M $point4,$pointc $point1,$pointd $point5,$pointc $point1,$pointe Z";
}

diamond () {
        square
        path1="M $point4,$pointc $point1,$pointd $point5,$pointc $point1,$pointe Z";
        path2="M $point2,$pointb $point2,$pointa $point3,$pointa $point3,$pointb Z";
}

borderoptions () {
        if [ $borderwidth -eq 0 ]; then
                path1=""
                path2=""
                path=""
        else
                case $border2 in
                        over)
                                path="$path1 $path2"
                                ;;
                        under)
                                convert $file -stroke $bordercolor -strokewidth ${borderwidth//[^0-9]/} -fill none -draw "path '$path2'" /tmp/polyfy1.png
                                path="$path1"
                                file="/tmp/polyfy1.png"
                                ;;
                        none)
                                path="$path1"
                                ;;
                esac

        fi
}

#default variables
bordercolor="white"
borderwidth="10"
channel="rgb"
size="3"
shape="diamond"
border2="over"
blur="0x0"

#get file, test if it exists, and get info
file="$1"; shift

if [ ! -f $file ]; then
        usage
else
        filename=$(basename ${file%.*})
        format=$(basename ${file##*.})
        directory=$(dirname $file)
        imagewidth=$(identify -format "%w" $file)
        imageheight=$(identify -format "%h" $file)
fi

#get options
for i in "$@"
do
        case $1 in
                r|g|b|rg|rb|gr|br|gb|bg|rgb|rbg|brg|bgr|grb|gbr)
                        channel="$1"
                        shift
                        ;;
                -b|--borderwidth)
                        borderwidth="$2"
                        shift 2
                        ;;
                -s|--size)
                        size="$2"
                        shift 2
                        ;;
				--blur)
						blur="0x$2"
						shift 2
						;;
                triangle|square|diamond)
                        shape="$1"
                        shift
                        ;;
                over)
                        shift
                        ;;
                under|behind)
                        border2="under"
                        shift
                        ;;
                none)
                        border2="none"
                        shift
                        ;;
                *)
                        ;;
        esac
done

$shape #calls chosen shape function

#conversion with imagemagick
convert -size "$imagewidth"x"$imageheight" xc:none -fill black -draw "path '$path1'" /tmp/polyfy1.png #make the matte
convert $file /tmp/polyfy1.png -alpha set  -compose Dstin -composite -channel ${channel//[^rgb]/} -negate /tmp/polyfy2.png #cut out the first polygon from the original image and negate it
borderoptions #check how to draw borders
convert -gravity center $file -blur $blur /tmp/polyfy2.png -compose Over -composite /tmp/polyfy3.png #combine the first polygon and the original image
convert /tmp/polyfy3.png -stroke $bordercolor -strokewidth ${borderwidth//[^0-9]/} -fill none -draw "path '$path'" $directory/$filename-polyfy.$format #draw borders and output the finished image

rm -f /tmp/polyfy{1,2,3}.png #remove temporary files

echo "file saved to "$directory"/"$filename"-polify."$format"" #output where the finished image was saved


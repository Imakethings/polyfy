#! /bin/bash

#adds totally awesome polygons to any wallpaper
#check if file is specified

usage () {
                echo "Incorrect use";
                echo "polyfy /path/to/file <options>";
                echo "Available options";
                echo "b<number> - width of border (default: b15)";
                echo "s<number> - size of triangle as a fraction of image height (default: s3)";
                echo "<shape> - triangle, square, or diamond";
                exit 1;
}

getinfo () {
        filename=$(identify -format "%t" $file);
        directory=$(identify -quiet -format "%d" $file);
        format=$(identify -format "%e" $file);
        imagewidth=$(identify -format "%w" $file);
        imageheight=$(identify -format "%h" $file);
}

triangle () {
        length=$(echo "$imageheight/${size//[^0-9]/}" | bc -l | awk '{print int($1+0.5)}');
        height=$(echo "$length * sqrt(3) / 2" | bc -l | awk '{print int($1+0.5)}');
        points;
        draw1="$point1,$pointa $point2,$pointb $point3,$pointb";
        draw2="$point1,$pointa $point2,$pointb $point3,$pointb Z M $point1,$pointb $point2,$pointa $point3,$pointa";
}

square () {
        length=$(echo "$imageheight/${size//[^0-9]/}" | bc -l | awk '{print int($1+0.5)}');
        height=$length;
        points;
        pluslength=$(echo "sqrt(($length^2)*2)/2" | bc -l | awk '{print int($1+0.5)}');
        point4=$((point1+pluslength));
        point5=$((point1-pluslength));
        pointd=$((pointc+pluslength));
        pointe=$((pointc-pluslength));
        draw1="$point2,$pointb $point2,$pointa $point3,$pointa $point3,$pointb";
        draw2="$point2,$pointb $point2,$pointa $point3,$pointa $point3,$pointb Z M $point4,$pointc $point1,$pointd $point5,$pointc $point1,$pointe";
}

diamond () {
        square
        draw1="$point4,$pointc $point1,$pointd $point5,$pointc $point1,$pointe";
        draw2="$point4,$pointc $point1,$pointd $point5,$pointc $point1,$pointe Z M $point2,$pointb $point2,$pointa $point3,$pointa $point3,$pointb";
}

points () {
        point1=$((imagewidth/2));
        pointa=$((imageheight/2-height/2));
        point2=$((imagewidth/2-length/2));
        pointb=$((imageheight/2+height/2));
        point3=$((imagewidth/2+length/2));
        pointc=$((imageheight/2));
}

#variables
bordercolor="white"
borderwidth="15"
channel="rgb"
size="3"
file="$1"; shift
shape="triangle"

if [ ! -f $file ]; then
        usage
fi

for i in "$@"
do
        case $1 in
                r|g|b|rg|rb|gr|br|gb|bg|rgb|rbg|brg|bgr|grb|gbr)
                        channel="$1"
                        shift
                        ;;
                b[0-9]|b[0-9][0-9])
                        borderwidth="$1"
                        shift
                        ;;
                s[0-9])
                        size="$1"
                        shift
                        ;;
                triangle|square|diamond)
                        shape="$1"
                        shift
                        ;;
                *)
                        ;;
        esac
done
getinfo
$shape
negate="-channel ${channel//[^rgb]/} -negate"

convert -size "$imagewidth"x"$imageheight" xc:none -fill black -draw "path 'M $draw1 Z'" /tmp/polyfy1.$format
convert $file /tmp/polyfy1.$format -alpha set -compose Dstin -composite $negate /tmp/polyfy2.$format
composite -gravity center /tmp/polyfy2.$format $file /tmp/polyfy3.$format
convert /tmp/polyfy3.$format -stroke $bordercolor -strokewidth ${borderwidth//[^0-9]/} -fill none -draw "path 'M $draw2 Z'" $directory/$filename-polyfy.$format

rm -f /tmp/{polyfy1.$format,polyfy2.$format,polyfy3.$format}

echo "file saved to "$directory"/"$filename"-polify."$format""

